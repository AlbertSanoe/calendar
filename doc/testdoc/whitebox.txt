测试用例1：测试 last_mday 的计算逻辑

输入：yy_mm_1 = 2023年4月1日（4月有30天），row = 0，column = 0，has_header = true
预期结果： last_mday 为30天.
结果：

测试用例3：测试 has_header 为 true 时的逻辑
输入：yy_mm_1 = 2023年6月1日，row = 0，column = 0，has_header = true
预期输出：在终端中打印2023年6月的日历，并包含年份信息

测试用例4：测试 has_header 为 false 时的逻辑
输入：yy_mm_1 = 2023年6月1日，row = 0，column = 0，has_header = false
预期输出：在终端中打印2023年6月的日历，不包含年份信息

测试用例5：测试 row 为 0 且 column 为 0 时的逻辑

输入：yy_mm_1 = 2023年6月1日，row = 0，column = 0，has_header = true
预期输出：在终端中打印2023年6月的日历，并在第一行第一列位置显示

测试用例6：测试 row 和 column 都不为 0 时的逻辑

输入：yy_mm_1 = 2023年6月1日，row = 1，column = 1，has_header = true
预期输出：在终端中打印2023年6月的日历，并在指定的行和列位置显示

测试用例8：测试循环生成每周日期行的逻辑

输入：yy_mm_1 = 2023年6月1日，row = 0，column = 0，has_header = true
预期输出：在终端中打印2023年6月的日历，包含所有周的日期行

测试用例9：测试 wd 的计算逻辑

输入：yy_mm_1 = 2023年6月1日（2023年6月1日是星期四），row = 0，column = 0，has_header = true
预期输出：在终端中打印2023年6月的日历，并确保第一天的日期显示在正确的星期位置

测试用例10：测试返回值逻辑

输入：yy_mm_1 = 2023年6月1日（2023年6月1日是星期四），row = 0，column = 0，has_header = true
预期输出：在终端中打印2023年6月的日历，并确保函数返回预期的值（如果有）

测试用例12：测试平年的逻辑

输入：yy_mm_1 = 2023年2月1日（平年的二月），row = 0，column = 0，has_header = true
预期输出：在终端中打印2023年2月的日历，并确保显示28天

测试用例14：测试负数行列值的逻辑

输入：yy_mm_1 = 2023年6月1日，row = -1，column = -1，has_header = true
预期输出：处理负数行列值，并在终端中打印合适的错误信息或默认值日历。